<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>tabby_jar-analyzer_commons-text</title>
    <link href="/2023/12/13/tabby-jar-analyzer-commons-text/"/>
    <url>/2023/12/13/tabby-jar-analyzer-commons-text/</url>
    
    <content type="html"><![CDATA[<h2 id="0x01-工具介绍"><a href="#0x01-工具介绍" class="headerlink" title="0x01 工具介绍"></a>0x01 工具介绍</h2><pre><code class="hljs">[https://github.com/wh1t3p1g/tabby](https://github.com/wh1t3p1g/tabby)</code></pre><p>TABBY 是一款针对 Java 语言的静态代码分析工具，相关工作已被接收发表在 The 53rd Annual IEEE&#x2F;IFIP International Conference on Dependable Systems and Networks (DSN 2023)，会议论文录用名单详见<a href="https://dsn2023.dei.uc.pt/program_research.html">DSN2023</a>。<br>TABBY使用静态分析框架 <a href="https://github.com/soot-oss/soot">Soot</a> 作为语义提取工具，将JAR&#x2F;WAR&#x2F;CLASS文件转化为代码属性图。 并使用 <a href="https://neo4j.com/">Neo4j</a> 图数据库来存储生成的代码属性图CPG。<br>    <a href="https://github.com/jar-analyzer/jar-analyzer">https://github.com/jar-analyzer/jar-analyzer</a><br><code>Jar Analyzer</code> 是一个分析 <code>Jar</code> 文件的 <code>GUI</code> 工具：</p><ul><li>支持大 <code>Jar</code> 以及批量 <code>Jars</code> 分析 </li><li>方便地搜索方法之间的调用关系 </li><li>分析 <code>LDC</code> 指令定位 <code>Jar</code> 中的字符串 </li><li>一键分析 <code>Spring Controller/Mapping</code> </li><li>对于方法字节码和指令的高级分析 </li><li>一键反编译，优化对内部类的处理 </li><li>一键生成方法的 <code>CFG</code> 分析结果 </li><li>一键生成方法的 <code>Stack Frame</code> 分析结果 </li><li>自定义 <code>SQL</code> 语句进行高级分析</li></ul><h2 id="0x02-漏洞环境Apache-Commons-Text"><a href="#0x02-漏洞环境Apache-Commons-Text" class="headerlink" title="0x02  漏洞环境Apache Commons Text"></a>0x02  漏洞环境Apache Commons Text</h2><p>CVE-2022-42889 Apache Commons Text 1.5 &lt;&#x3D; Apache Commons Text &lt;&#x3D; 1.9<br>org.apache.commons.text.lookup.StringLookup 的实例。从 1.5 版到 1.9 版，攻击者可构造恶意文本，使得Apache Commons Text 在解析时执行任意恶意代码。<br><a href="https://repo1.maven.org/maven2/org/apache/commons/commons-text/1.9/commons-text-1.9.jar">Apache Commons Text 1.9</a></p><h2 id="0x03-使用jar-ayalyzer分析"><a href="#0x03-使用jar-ayalyzer分析" class="headerlink" title="0x03  使用jar-ayalyzer分析"></a>0x03  使用jar-ayalyzer分析</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542509837-9a932a3a-ed26-435c-8408-8fe6fbcc894c.png#averageHue=%23f3f3f3&clientId=udb83b05e-8de4-4&from=paste&height=554&id=u16a5d6e7&originHeight=554&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2131426&status=done&style=none&taskId=u7ba70495-9c31-49b9-8578-a7fbc6c398b&title=&width=1280" alt="image.png"></p><p>导入后点击start engine。<br>我们知道CVE-2022-42889主要触发点是lookup调用了ScriptEngine的eval方法造成代码执行。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542516105-69a93177-dab0-416c-a9d3-902fd7de7f50.png#averageHue=%23f3f2f1&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u17193a09&originHeight=720&originWidth=1076&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2328710&status=done&style=none&taskId=u8d3b7a2f-bbff-4f8a-be00-613523bea46&title=&width=1076" alt="image.png"></p><p>在search类别里进行搜索<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542521312-680b91da-fa02-47e5-ac1b-ab70b26d2068.png#averageHue=%23f3f1f1&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u6abbddb9&originHeight=720&originWidth=1154&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2497472&status=done&style=none&taskId=ud95b8162-f440-43d5-a932-c7c55d7e438&title=&width=1154" alt="image.png"></p><p>这里可以得到org.apache.commons.text.lookup$lookup方法调用了scriptEngine.eval。然后key可控， script &#x3D; keys[1]，所以慢慢往上走就可以了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542531309-72c89775-84ca-457d-b133-ea5d0682434b.png#averageHue=%23f5f3f1&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u010bf544&originHeight=720&originWidth=1088&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2354683&status=done&style=none&taskId=u7d3dfaca-b256-4bbc-a5f4-0e2b087286f&title=&width=1088" alt="image.png"></p><p>在call界面，有caller，callee两个界面。caller表示哪个方法调用了lookup方法，callee表示lookup里调用了什么方法。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542537645-b7dacbd6-0c0d-4f7c-966b-54f7f9dcd6f9.png#averageHue=%23faf5f2&clientId=udb83b05e-8de4-4&from=paste&height=552&id=u1494525e&originHeight=552&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2123732&status=done&style=none&taskId=u5558957d-ad3f-43ae-a67f-d2544e0181f&title=&width=1280" alt="image.png"></p><p>往上来到了StringLookup接口，上面是调用，下面是实现类。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542541197-20f9c12a-7104-4515-8f69-ff576fd6e1b2.png#averageHue=%23faf2ed&clientId=udb83b05e-8de4-4&from=paste&height=603&id=ue288536e&originHeight=603&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2319941&status=done&style=none&taskId=u20117e80-d6ca-493c-a23c-e9b179ced70&title=&width=1280" alt="image.png"></p><p>也可以在impl里面查看接口的实现类。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542545932-beb52cde-85a3-4435-a9ec-92e08bfcc52d.png#averageHue=%23f4f3f2&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u97bcc4ec&originHeight=720&originWidth=1141&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2469339&status=done&style=none&taskId=u8bae221a-49ec-490e-97f5-f0918db6b86&title=&width=1141" alt="image.png"><br>往上来到了org.apache.commons.text$StringSubstitutor#resolveVariable, 可以看到都可传。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542550368-ec85dbbf-d12e-4022-b707-60eb5a78d099.png#averageHue=%23f5f4f3&clientId=udb83b05e-8de4-4&from=paste&height=687&id=u6cf4089d&originHeight=687&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2643115&status=done&style=none&taskId=uce4a9bfc-f760-4fc6-bcc6-30d6075083e&title=&width=1280" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542554978-536ddcbc-61c3-4db4-9dab-e8aa12e2a0e3.png#averageHue=%23edeceb&clientId=udb83b05e-8de4-4&from=paste&height=455&id=uf30b5842&originHeight=455&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1750560&status=done&style=none&taskId=ua62ad555-f385-4baa-b093-89e2c640aeb&title=&width=1280" alt="image.png"><br>org&#x2F;apache&#x2F;commons&#x2F;text&#x2F;StringSubstitutor#substitute，之间如果有别的调用，慢慢分析也就有很多其他的触发链，但这个好像并没有<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542558672-b87f43ef-b90e-4590-abca-31e0b0ef0b3b.png#averageHue=%23f1edea&clientId=udb83b05e-8de4-4&from=paste&height=720&id=ub1af5bb4&originHeight=720&originWidth=1165&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2521268&status=done&style=none&taskId=u922743ec-60f8-4b7d-bf0e-f43a511e124&title=&width=1165" alt="image.png"><br>最后可以看见replace调用。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542563767-4a0c7bd6-1292-4354-9f29-8f515fc89f5d.png#averageHue=%23f6f3f3&clientId=udb83b05e-8de4-4&from=paste&height=827&id=u83ee766e&originHeight=827&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1790117&status=done&style=none&taskId=u9e9b8e23-eb42-4c08-a792-ef3507ddfc8&title=&width=720" alt="image.png"></p><p>都是差不多的处理。<br>Poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">StringSubstitutor</span> <span class="hljs-variable">stringSubstitutor</span> <span class="hljs-operator">=</span> StringSubstitutor.createInterpolator();<br>stringSubstitutor.replace(<span class="hljs-string">&quot;$&#123;script:javascript:2 + 2&#125;);</span><br></code></pre></td></tr></table></figure><p>整个使用流程下载感觉非常流畅，无脑。许少在ct一年成长的太快，弟弟我就是纯纯脚本小子。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542570434-0b4fb78c-8694-45cd-99c9-35d8434c06c0.png#averageHue=%23f0efef&clientId=udb83b05e-8de4-4&from=paste&height=675&id=u76612574&originHeight=675&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2596946&status=done&style=none&taskId=ue7f886fb-c33a-4b8a-94b3-1189e2392e2&title=&width=1280" alt="image.png"><br>advance里面有设置好漏洞字符，下面还引入gpt还有一个常用工具。哎，人与人差距太大了，要想上个月投ct安抚，简历都没过，真实服了。</p><h2 id="0x04-tabby"><a href="#0x04-tabby" class="headerlink" title="0x04 tabby"></a>0x04 tabby</h2><p>上面已经知道是起点replace。 终点为lookup。<br>那只需要一下语句分析得到调用图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">MATCH</span> path<span class="hljs-operator">=</span>(source:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;replace&quot;, CLASSNAME: &quot;org.apache.commons.text.StringSubstitutor&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m1:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-keyword">RETURN</span> path<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542575487-1e835b7e-096e-4015-9b06-fbdb496eec30.png#averageHue=%232b2e35&clientId=udb83b05e-8de4-4&from=paste&height=720&id=uacfb24e1&originHeight=720&originWidth=1118&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2419577&status=done&style=none&taskId=u3b17eb15-1ff5-48fe-b919-979ad54ddd7&title=&width=1118" alt="image.png"><br>可以看到已经跑出链子。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542579160-c482b5f4-67d3-4492-8530-499b98b739ec.png#averageHue=%232d2c2c&clientId=udb83b05e-8de4-4&from=paste&height=536&id=udcb658dc&originHeight=536&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2062182&status=done&style=none&taskId=u8ad71091-9e3b-4be8-a5e7-997f99b07e6&title=&width=1280" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542583735-a0aea128-c837-4bc9-b19f-2f60152eaf5e.png#averageHue=%232a2d34&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u26ab9b4f&originHeight=720&originWidth=898&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1943611&status=done&style=none&taskId=uddeb7824-305c-4c58-bf06-2b6ee7295e7&title=&width=898" alt="image.png"><br>它是一个接口，实现类太多了，继续添加一点规则。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">MATCH</span> path<span class="hljs-operator">=</span>(source:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;replace&quot;, CLASSNAME: &quot;org.apache.commons.text.StringSubstitutor&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m1:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-operator">-</span>[:ALIAS<span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m2:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;) <span class="hljs-keyword">RETURN</span> path<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542590366-eed0ec3a-3916-41d7-a28c-3b517ade4090.png#averageHue=%232b2e35&clientId=udb83b05e-8de4-4&from=paste&height=720&id=u58195af3&originHeight=720&originWidth=1206&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2609975&status=done&style=none&taskId=u995b1977-9b6d-4a4f-a2e4-384e7650b1a&title=&width=1206" alt="image.png"><br>可以得到以上图，org.apache.commons.text.lookup.StringLookup是一个接口，其他的lookup方法都是去实现这个方法。所以这里用:ALIAS去修饰。最后我们走到的eval，所以还有写一条&#x2F;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">MATCH</span> path<span class="hljs-operator">=</span>(source:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;replace&quot;, CLASSNAME: &quot;org.apache.commons.text.StringSubstitutor&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m1:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-operator">-</span>[:ALIAS<span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m2:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m3:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;eval&quot;&#125;) <span class="hljs-keyword">RETURN</span> path<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542597132-35cd9765-ccff-4eae-a67b-92bbbfcd1e3c.png#averageHue=%232c2f36&clientId=udb83b05e-8de4-4&from=paste&height=693&id=ucfe92f18&originHeight=693&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2666190&status=done&style=none&taskId=ue08f3ca5-e6aa-475d-ab0f-ecdfbcca4a4&title=&width=1280" alt="image.png"></p><p>可以看到完整的链子已经出来了。说实话，跑的挺久的，可能我电脑太老了。<br>优化一下。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">MATCH</span> path<span class="hljs-operator">=</span>(source:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;replace&quot;, CLASSNAME: &quot;org.apache.commons.text.StringSubstitutor&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span><span class="hljs-number">0.</span><span class="hljs-number">.1</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span><br>(m1:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;substitute&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m2:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-operator">-</span>[:ALIAS<span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m3:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;lookup&quot;&#125;)<span class="hljs-operator">-</span>[:<span class="hljs-keyword">CALL</span><span class="hljs-operator">*</span>]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(m4:<span class="hljs-keyword">Method</span> &#123;NAME: &quot;eval&quot;, CLASSNAME: &quot;javax.script.ScriptEngine&quot;&#125;) <span class="hljs-keyword">RETURN</span> path<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542602613-79da88b3-c059-441d-bf99-b59f0bfaf660.png#averageHue=%232d3037&clientId=udb83b05e-8de4-4&from=paste&height=646&id=u24ccbb7c&originHeight=646&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2485369&status=done&style=none&taskId=u769492a5-822f-4240-9360-486ef811a56&title=&width=1280" alt="image.png"></p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><p>jar-ayalyzer 分析单jar包比较好使，快是真的快，分析起来很流畅，多jar包还是用tabby。tabby使用起来，图形化很直观，就是跑sql语句太慢了（可能我电脑卡），可以分析多jar包，还有neo4j语句太难写了。（小孩才做选择，成人的世界就是全都要）<br>整体看来都很不错。只要source点，sink点就能一步步往上挖，这个时候，还是tabby比较好使，全跑出来，然后内眼看。<br>tabby内有许多定义好的sink点，很实用。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542607981-a02aeb0e-0ff8-4651-b078-e463fd405ded.png#averageHue=%23454d3f&clientId=udb83b05e-8de4-4&from=paste&height=506&id=u32e638a1&originHeight=506&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1946769&status=done&style=none&taskId=ub20142fa-4762-4857-aa04-60128733f98&title=&width=1280" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542612742-d3540034-16af-4c3a-af66-440aefcf3867.png#averageHue=%23474d4d&clientId=udb83b05e-8de4-4&from=paste&height=356&id=u0277dae3&originHeight=356&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1369677&status=done&style=none&taskId=u5513dbe0-c9e6-4f09-a264-47a5a1f50c9&title=&width=1280" alt="image.png"><br>这里没找到，应该是默认confg里面没有，所以没找到，所以有时候碰见了，可以写进去 ![image-<img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542618145-15a19937-f46f-41f7-85b0-57e5852bf347.png#averageHue=%23585343&clientId=udb83b05e-8de4-4&from=paste&height=509&id=u1a492d1a&originHeight=509&originWidth=1280&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1958304&status=done&style=none&taskId=ue61cf3cb-7a03-41e0-99ee-336c9511942&title=&width=1280" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701542623492-1d3ae1a1-7d5c-4be1-88b8-97f733967e92.png#averageHue=%232b2e36&clientId=udb83b05e-8de4-4&from=paste&height=720&id=ufb81dd6a&originHeight=720&originWidth=1218&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2635941&status=done&style=none&taskId=u8636b982-00c9-40b8-80ea-46fef90c592&title=&width=1218" alt="image.png"><br>自己写入sink点，可以成功查询到。</p><h2 id="尝试"><a href="#尝试" class="headerlink" title="尝试"></a>尝试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">MATCH (source:Method &#123;NAME:<span class="hljs-string">&quot;replace&quot;</span>&#125;)<br>MATCH (sink:Method &#123;NAME:<span class="hljs-string">&quot;lookup&quot;</span>&#125;)&lt;-[:HAS]-(cls:Class)-[:INTERFACE|EXTENDS*]<br>                    -&gt;(cls1:Class &#123;NAME:<span class="hljs-string">&quot;org.apache.commons.text.lookup.StringLookup&quot;</span>&#125;)<br>MATCH (sink)-[:CALL*]-&gt;(m1:Method&#123;NAME:<span class="hljs-string">&quot;getByName&quot;</span>&#125;)<br>call tabby.beta.findPath(source,<span class="hljs-string">&quot;-&quot;</span>,sink,<span class="hljs-number">12</span>,<span class="hljs-literal">false</span>) YIELD path<br><span class="hljs-keyword">return</span> path<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/23170059/1701837000942-be1188d1-312e-4f4c-a196-ee15b1e274a0.png#averageHue=%233d4146&clientId=u13358556-7c3f-4&from=paste&height=777&id=u64e51d9d&originHeight=777&originWidth=1189&originalType=binary&ratio=1&rotation=0&showTitle=false&size=226076&status=done&style=none&taskId=u4a5ab470-ecaf-4a10-b6ff-047f96e85b6&title=&width=1189" alt="image.png"><br>dns链</p><h2 id="0x06-参考链接"><a href="#0x06-参考链接" class="headerlink" title="0x06  参考链接"></a>0x06  参考链接</h2><p><a href="https://github.com/wh1t3p1g/tabby">https://github.com/wh1t3p1g/tabby</a><br><a href="https://github.com/jar-analyzer/jar-analyzer">https://github.com/jar-analyzer/jar-analyzer</a><br><a href="https://www.anquanke.com/post/id/283625">https://www.anquanke.com/post/id/283625</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/12/13/hello-world/"/>
    <url>/2023/12/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
